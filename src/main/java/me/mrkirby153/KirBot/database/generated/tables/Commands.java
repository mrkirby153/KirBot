/*
 * This file is generated by jOOQ.
*/
package me.mrkirby153.KirBot.database.generated.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import me.mrkirby153.KirBot.database.generated.Keys;
import me.mrkirby153.KirBot.database.generated.Kirbot;
import me.mrkirby153.KirBot.database.generated.enums.CommandsType;
import me.mrkirby153.KirBot.database.generated.tables.records.CommandsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Commands extends TableImpl<CommandsRecord> {

    private static final long serialVersionUID = 637283070;

    /**
     * The reference instance of <code>kirbot.commands</code>
     */
    public static final Commands COMMANDS = new Commands();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CommandsRecord> getRecordType() {
        return CommandsRecord.class;
    }

    /**
     * The column <code>kirbot.commands.id</code>.
     */
    public final TableField<CommandsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>kirbot.commands.guild</code>.
     */
    public final TableField<CommandsRecord, Integer> GUILD = createField("guild", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>kirbot.commands.type</code>.
     */
    public final TableField<CommandsRecord, CommandsType> TYPE = createField("type", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(me.mrkirby153.KirBot.database.generated.enums.CommandsType.class), this, "");

    /**
     * The column <code>kirbot.commands.name</code>.
     */
    public final TableField<CommandsRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "");

    /**
     * The column <code>kirbot.commands.data</code>.
     */
    public final TableField<CommandsRecord, String> DATA = createField("data", org.jooq.impl.SQLDataType.VARCHAR.length(2048).nullable(false), this, "");

    /**
     * Create a <code>kirbot.commands</code> table reference
     */
    public Commands() {
        this("commands", null);
    }

    /**
     * Create an aliased <code>kirbot.commands</code> table reference
     */
    public Commands(String alias) {
        this(alias, COMMANDS);
    }

    private Commands(String alias, Table<CommandsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Commands(String alias, Table<CommandsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Kirbot.KIRBOT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CommandsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_COMMANDS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CommandsRecord>> getKeys() {
        return Arrays.<UniqueKey<CommandsRecord>>asList(Keys.KEY_COMMANDS_ID_UNIQUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CommandsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CommandsRecord, ?>>asList(Keys.FK_COMMANDS_GUILD1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Commands as(String alias) {
        return new Commands(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Commands rename(String name) {
        return new Commands(name, null);
    }
}
