/*
 * This file is generated by jOOQ.
*/
package me.mrkirby153.KirBot.database.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import me.mrkirby153.KirBot.database.generated.Keys;
import me.mrkirby153.KirBot.database.generated.Kirbot;
import me.mrkirby153.KirBot.database.generated.tables.records.FeedsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Feeds extends TableImpl<FeedsRecord> {

    private static final long serialVersionUID = -529726549;

    /**
     * The reference instance of <code>kirbot.feeds</code>
     */
    public static final Feeds FEEDS = new Feeds();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FeedsRecord> getRecordType() {
        return FeedsRecord.class;
    }

    /**
     * The column <code>kirbot.feeds.id</code>.
     */
    public final TableField<FeedsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>kirbot.feeds.guild_id</code>.
     */
    public final TableField<FeedsRecord, Integer> GUILD_ID = createField("guild_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>kirbot.feeds.channel</code>.
     */
    public final TableField<FeedsRecord, String> CHANNEL = createField("channel", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "");

    /**
     * The column <code>kirbot.feeds.feed_url</code>.
     */
    public final TableField<FeedsRecord, String> FEED_URL = createField("feed_url", org.jooq.impl.SQLDataType.VARCHAR.length(300).nullable(false), this, "");

    /**
     * The column <code>kirbot.feeds.retry_on</code>.
     */
    public final TableField<FeedsRecord, Timestamp> RETRY_ON = createField("retry_on", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>kirbot.feeds</code> table reference
     */
    public Feeds() {
        this("feeds", null);
    }

    /**
     * Create an aliased <code>kirbot.feeds</code> table reference
     */
    public Feeds(String alias) {
        this(alias, FEEDS);
    }

    private Feeds(String alias, Table<FeedsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Feeds(String alias, Table<FeedsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Kirbot.KIRBOT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<FeedsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_FEEDS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<FeedsRecord> getPrimaryKey() {
        return Keys.KEY_FEEDS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FeedsRecord>> getKeys() {
        return Arrays.<UniqueKey<FeedsRecord>>asList(Keys.KEY_FEEDS_PRIMARY, Keys.KEY_FEEDS_ID_UNIQUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<FeedsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<FeedsRecord, ?>>asList(Keys.FK_FEEDS_GUILD1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Feeds as(String alias) {
        return new Feeds(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Feeds rename(String name) {
        return new Feeds(name, null);
    }
}
